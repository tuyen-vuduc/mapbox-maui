namespace MapboxMaui.Expressions;

partial class DslExpression
{
    public static DslExpression Subtract(params object[] arguments) => new(DslOperator.Subtract, arguments);
    public static DslExpression Not(params object[] arguments) => new(DslOperator.Not, arguments);
    public static DslExpression Neq(params object[] arguments) => new(DslOperator.Neq, arguments);
    public static DslExpression Product(params object[] arguments) => new(DslOperator.Product, arguments);
    public static DslExpression Division(params object[] arguments) => new(DslOperator.Division, arguments);
    public static DslExpression Mod(params object[] arguments) => new(DslOperator.Mod, arguments);
    public static DslExpression Pow(params object[] arguments) => new(DslOperator.Pow, arguments);
    public static DslExpression Sum(params object[] arguments) => new(DslOperator.Sum, arguments);
    public static DslExpression Lt(params object[] arguments) => new(DslOperator.Lt, arguments);
    public static DslExpression Lte(params object[] arguments) => new(DslOperator.Lte, arguments);
    public static DslExpression Eq(params object[] arguments) => new(DslOperator.Eq, arguments);
    public static DslExpression Gt(params object[] arguments) => new(DslOperator.Gt, arguments);
    public static DslExpression Gte(params object[] arguments) => new(DslOperator.Gte, arguments);
    public static DslExpression Abs(params object[] arguments) => new(DslOperator.Abs, arguments);
    public static DslExpression Accumulated(params object[] arguments) => new(DslOperator.Accumulated, arguments);
    public static DslExpression Acos(params object[] arguments) => new(DslOperator.Acos, arguments);
    public static DslExpression All(params object[] arguments) => new(DslOperator.All, arguments);
    public static DslExpression Any(params object[] arguments) => new(DslOperator.Any, arguments);
    public static DslExpression Array(params object[] arguments) => new(DslOperator.Array, arguments);
    public static DslExpression Asin(params object[] arguments) => new(DslOperator.Asin, arguments);
    public static DslExpression At(params object[] arguments) => new(DslOperator.At, arguments);
    public static DslExpression Atan(params object[] arguments) => new(DslOperator.Atan, arguments);
    public static DslExpression Boolean(params object[] arguments) => new(DslOperator.Boolean, arguments);
    public static DslExpression SwitchCase(params object[] arguments) => new(DslOperator.SwitchCase, arguments);
    public static DslExpression Ceil(params object[] arguments) => new(DslOperator.Ceil, arguments);
    public static DslExpression Coalesce(params object[] arguments) => new(DslOperator.Coalesce, arguments);
    public static DslExpression Collator(params object[] arguments) => new(DslOperator.Collator, arguments);
    public static DslExpression Concat(params object[] arguments) => new(DslOperator.Concat, arguments);
    public static DslExpression Config(params object[] arguments) => new(DslOperator.Config, arguments);
    public static DslExpression Cos(params object[] arguments) => new(DslOperator.Cos, arguments);
    public static DslExpression Distance(params object[] arguments) => new(DslOperator.Distance, arguments);
    public static DslExpression DistanceFromCenter(params object[] arguments) => new(DslOperator.DistanceFromCenter, arguments);
    public static DslExpression Downcase(params object[] arguments) => new(DslOperator.Downcase, arguments);
    public static DslExpression E(params object[] arguments) => new(DslOperator.E, arguments);
    public static DslExpression FeatureState(params object[] arguments) => new(DslOperator.FeatureState, arguments);
    public static DslExpression Floor(params object[] arguments) => new(DslOperator.Floor, arguments);
    public static DslExpression Format(params object[] arguments) => new(DslOperator.Format, arguments);
    public static DslExpression GeometryType(params object[] arguments) => new(DslOperator.GeometryType, arguments);
    public static DslExpression Get(params object[] arguments) => new(DslOperator.Get, arguments);
    public static DslExpression Has(params object[] arguments) => new(DslOperator.Has, arguments);
    public static DslExpression HeatmapDensity(params object[] arguments) => new(DslOperator.HeatmapDensity, arguments);
    public static DslExpression Hsl(params object[] arguments) => new(DslOperator.Hsl, arguments);
    public static DslExpression Hsla(params object[] arguments) => new(DslOperator.Hsla, arguments);
    public static DslExpression Id(params object[] arguments) => new(DslOperator.Id, arguments);
    public static DslExpression Image(params object[] arguments) => new(DslOperator.Image, arguments);
    public static DslExpression InExpression(params object[] arguments) => new(DslOperator.InExpression, arguments);
    public static DslExpression IndexOf(params object[] arguments) => new(DslOperator.IndexOf, arguments);
    public static DslExpression Interpolate(params object[] arguments) => new(DslOperator.Interpolate, arguments);
    public static DslExpression IsSupportedScript(params object[] arguments) => new(DslOperator.IsSupportedScript, arguments);
    public static DslExpression Length(params object[] arguments) => new(DslOperator.Length, arguments);
    public static DslExpression LetExpression(params object[] arguments) => new(DslOperator.LetExpression, arguments);
    public static DslExpression LineProgress(params object[] arguments) => new(DslOperator.LineProgress, arguments);
    public static DslExpression Literal(params object[] arguments) => new(DslOperator.Literal, arguments);
    public static DslExpression Ln(params object[] arguments) => new(DslOperator.Ln, arguments);
    public static DslExpression Ln2(params object[] arguments) => new(DslOperator.Ln2, arguments);
    public static DslExpression Log10(params object[] arguments) => new(DslOperator.Log10, arguments);
    public static DslExpression Log2(params object[] arguments) => new(DslOperator.Log2, arguments);
    public static DslExpression Match(params object[] arguments) => new(DslOperator.Match, arguments);
    public static DslExpression Max(params object[] arguments) => new(DslOperator.Max, arguments);
    public static DslExpression MeasureLight(params object[] arguments) => new(DslOperator.MeasureLight, arguments);
    public static DslExpression Min(params object[] arguments) => new(DslOperator.Min, arguments);
    public static DslExpression Number(params object[] arguments) => new(DslOperator.Number, arguments);
    public static DslExpression NumberFormat(params object[] arguments) => new(DslOperator.NumberFormat, arguments);
    public static DslExpression ObjectExpression(params object[] arguments) => new(DslOperator.ObjectExpression, arguments);
    public static DslExpression Pi(params object[] arguments) => new(DslOperator.Pi, arguments);
    public static DslExpression Pitch(params object[] arguments) => new(DslOperator.Pitch, arguments);
    public static DslExpression Properties(params object[] arguments) => new(DslOperator.Properties, arguments);
    public static DslExpression Random(params object[] arguments) => new(DslOperator.Random, arguments);
    public static DslExpression RasterParticleSpeed(params object[] arguments) => new(DslOperator.RasterParticleSpeed, arguments);
    public static DslExpression RasterValue(params object[] arguments) => new(DslOperator.RasterValue, arguments);
    public static DslExpression ResolvedLocale(params object[] arguments) => new(DslOperator.ResolvedLocale, arguments);
    public static DslExpression Rgb(params object[] arguments) => new(DslOperator.Rgb, arguments);
    public static DslExpression Rgba(params object[] arguments) => new(DslOperator.Rgba, arguments);
    public static DslExpression Round(params object[] arguments) => new(DslOperator.Round, arguments);
    public static DslExpression Sin(params object[] arguments) => new(DslOperator.Sin, arguments);
    public static DslExpression SkyRadialProgress(params object[] arguments) => new(DslOperator.SkyRadialProgress, arguments);
    public static DslExpression Slice(params object[] arguments) => new(DslOperator.Slice, arguments);
    public static DslExpression Sqrt(params object[] arguments) => new(DslOperator.Sqrt, arguments);
    public static DslExpression Step(params object[] arguments) => new(DslOperator.Step, arguments);
    public static DslExpression String(params object[] arguments) => new(DslOperator.String, arguments);
    public static DslExpression Tan(params object[] arguments) => new(DslOperator.Tan, arguments);
    public static DslExpression ToBoolean(params object[] arguments) => new(DslOperator.ToBoolean, arguments);
    public static DslExpression ToColor(params object[] arguments) => new(DslOperator.ToColor, arguments);
    public static DslExpression ToNumber(params object[] arguments) => new(DslOperator.ToNumber, arguments);
    public static DslExpression ToRgba(params object[] arguments) => new(DslOperator.ToRgba, arguments);
    public static DslExpression ToStringX(params object[] arguments) => new(DslOperator.ToStringX, arguments);
    public static DslExpression TypeofExpression(params object[] arguments) => new(DslOperator.TypeofExpression, arguments);
    public static DslExpression Upcase(params object[] arguments) => new(DslOperator.Upcase, arguments);
    public static DslExpression VarExpression(params object[] arguments) => new(DslOperator.VarExpression, arguments);
    public static DslExpression Within(params object[] arguments) => new(DslOperator.Within, arguments);
    public static DslExpression Zoom(params object[] arguments) => new(DslOperator.Zoom, arguments);
    public static DslExpression Linear(params object[] arguments) => new(DslOperator.Linear, arguments);
    public static DslExpression Exponential(params object[] arguments) => new(DslOperator.Exponential, arguments);
    public static DslExpression CubicBezier(params object[] arguments) => new(DslOperator.CubicBezier, arguments);
}